// Mocks generated by Mockito 5.4.4 from annotations
// in weather_app/test/unit_test_cases/current_weather/presentation/current_weather_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:weather_app/core/result_state_template.dart' as _i2;
import 'package:weather_app/core/usecase_template.dart' as _i7;
import 'package:weather_app/features/current_weather/data/models/current_weather_request_dm.dart'
    as _i5;
import 'package:weather_app/features/current_weather/data/models/current_weather_response_dm.dart'
    as _i9;
import 'package:weather_app/features/current_weather/domain/usecase/current_weather_usecase.dart'
    as _i3;
import 'package:weather_app/features/current_weather/domain/usecase/get_current_weather_local_usecase.dart'
    as _i6;
import 'package:weather_app/features/current_weather/domain/usecase/set_current_weather_local_usecase.dart'
    as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResultState_0<T> extends _i1.SmartFake
    implements _i2.ResultState<T> {
  _FakeResultState_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CurrentWeatherUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCurrentWeatherUseCase extends _i1.Mock
    implements _i3.CurrentWeatherUseCase {
  MockCurrentWeatherUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ResultState<dynamic>> call(
          _i5.CurrentWeatherRequestDm? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i4.Future<_i2.ResultState<dynamic>>.value(
            _FakeResultState_0<dynamic>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.ResultState<dynamic>>);
}

/// A class which mocks [GetCurrentWeatherLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetCurrentWeatherLocalUseCase extends _i1.Mock
    implements _i6.GetCurrentWeatherLocalUseCase {
  MockGetCurrentWeatherLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ResultState<dynamic>> call(_i7.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i4.Future<_i2.ResultState<dynamic>>.value(
            _FakeResultState_0<dynamic>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.ResultState<dynamic>>);
}

/// A class which mocks [SetCurrentWeatherLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSetCurrentWeatherLocalUseCase extends _i1.Mock
    implements _i8.SetCurrentWeatherLocalUseCase {
  MockSetCurrentWeatherLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ResultState<dynamic>> call(
          _i9.CurrentWeatherResponseDm? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i4.Future<_i2.ResultState<dynamic>>.value(
            _FakeResultState_0<dynamic>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.ResultState<dynamic>>);
}
